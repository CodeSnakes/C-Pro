/*
C语言位运算符
& | ^ ~ << >>
*/
#include <stdio.h>

int main()
{

    unsigned int a = 60; /* 60 = 0011 1100 二进制Binary */
    unsigned int b = 13; /* 13 = 0000 1101 */
    int c = 0;           // false

    c = a & b; /* 12 = 0000 1100 按位与操作 */
    printf("Line 1 - c 的值是 %d\n", c);

    c = a | b; /* 61 = 0011 1101 按位或运算符 */
    printf("Line 2 - c 的值是 %d\n", c);

    c = a ^ b; /* 49 = 0011 0001 异或运算符 */
    printf("Line 3 - c 的值是 %d\n", c);

    c = ~a; /*-61 = 1100 0011 取反运算符*/
    printf("Line 4 - c 的值是 %d\n", c);

    c = a << 2; /* 240 = 1111 0000 */
    printf("Line 5 - c 的值是 %d\n", c);
    /*
    二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。
    */

    c = a >> 2; /* 15 = 0000 1111 */
    printf("Line 6 - c 的值是 %d\n", c);
    /*
    二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。
    */
    return 0;
}