int main()
{
    // 一个字节通常8位长。 一个位节存储8位无符号数，储存的数值范围为0-255
    int a = 1;       //Visual C++ 为每一个整型整数分配四个字节（32位）
    short b = 2;     //2个字节
    long c = 3;      //4个字节
    long long d = 4; //8个字节

    float e = 3.14;    //4个字节 range：-3.4*10^(-38) ~ 3.4*10^38 有6位有效数字 float类型小数点后有效数字为6~7位。
    double f = 3.1415; //8个字节 range：-1.7*10^(-308) ~ 1.7*10^308 有15位有效数字
                       //注意: C程序中的实型常量都作为双精度浮点型常量。分配8个字符
                       //如有下列情况
    float g = 3.15149;
    /*在进行编译时 会给float分配4个字节，但对于浮点数型常量3.15149，则按双精度处理，分配8个字节。
    。编译系统会发出“警告”( warning: truncation from ' const double' to 'float')。意为“把一个双精度常量转换为float 型”，
    提醒用户注意这种转换可能损失精度。这样的“警告”，一般不会影响程序运行结果的正确性,
    但会影响程序运行结果的精确度。
    可以在常量的末尾加专用字符，强制指定常量的类型。如在3. 14159后面加字母F或f,就表示是float型常量,分配4个字节。
    如果在实型常量后面加大写或小写的L,则指定
    */
    float h = 3.15149f;       //把此3. 14159按单精度浮点常量处理，编译时不出现“警告”
    long double r = 3.14159L; //把此1.23作为longdouble型处理
    return 0;
}